import { useState } from "react";
import { useScaffoldWriteContract } from "~~/hooks/scaffold-eth";

export default function EndPoll({ pollId }: { pollId: bigint }) {
  // –•—É–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç
  const { writeContractAsync, isMining } = useScaffoldWriteContract({
    contractName: "VotingContract",
  });

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
  const [isSuccess, setIsSuccess] = useState<boolean>(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
  const handleEndPoll = async () => {
    if (window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ?")) {
      try {
        // –í—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
        await writeContractAsync({
          functionName: "endPoll",
          args: [pollId],
        });
        setIsSuccess(true); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Å–ø–µ—Ö
        setTimeout(() => setIsSuccess(false), 3000); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:", error);
        alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      }
    }
  };

  return (
    <div className="w-full max-w-md p-6 bg-gray-800 text-white rounded-lg shadow-lg">
      <div className="flex flex-col items-start justify-start space-y-4">
        <div className="flex items-center space-x-3">
          <span className="text-4xl text-yellow-300">‚ö†Ô∏è</span>
          <h3 className="text-2xl font-bold">–ó–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ</h3>
        </div>
        <p className="text-lg">–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.</p>
        <button
          onClick={handleEndPoll}
          disabled={isMining || isSuccess}
          className={`px-6 py-3 rounded-none text-white font-medium flex items-center justify-center border-2 ${
            isMining
              ? "bg-gray-600 border-gray-600 cursor-not-allowed"
              : isSuccess
                ? "bg-green-600 border-green-600 cursor-not-allowed"
                : "bg-blue-600 border-blue-600 hover:bg-blue-700 hover:border-blue-700 transition duration-300"
          }`}
        >
          {isMining ? (
            <>
              <span className="animate-spin mr-2">üîÑ</span> –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ...
            </>
          ) : isSuccess ? (
            <>
              <span className="mr-2">‚úÖ</span> –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!
            </>
          ) : (
            "–ó–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ"
          )}
        </button>
      </div>
    </div>
  );
}
